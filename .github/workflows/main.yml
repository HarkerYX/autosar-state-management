name: 'AUTOSAR CI'

on:
  workflow_dispatch:
  push:
    branches:
      - '**' 
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  Build_Run_UTs:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Install gcovr
        run: pip install gcovr
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Make build directory
        run: mkdir build

      - name: Create cmake configuration
        working-directory: build
        run: cmake ..

      - name: Build UTs
        working-directory: build
        run: make gTests_all

      - name: Run UTs
        run: ./build/tests/gTests_all --gtest_output=xml:./test-reports/UTs_report.xml

      - name: XUnit Viewer
        id: xunit-viewer
        uses: AutoModality/action-xunit-viewer@v1  
        if: always()

      - name: Attach the GTest Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Google-Test-Report.html
          path: ${{ steps.xunit-viewer.outputs.report-dir }}/index.html

      - name: Build coverage
        working-directory: build
        run: make gTests_coverage

      - name: Attach the Coverage Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage-Report.html
          path: build/gTests_coverage/index.html

  Linters:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run cppcheck
        uses: deep5050/cppcheck-action@v3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          other_options: --language=c++ --std=c++14 --enable=all --addon=cert.py

      - name: Read Cppcheck results
        id: cppcheck
        uses: juliangruber/read-file-action@v1
        with:
          path: ./cppcheck_report.txt

      - name: Echo Cppcheck results
        run: echo "${{ steps.cppcheck.outputs.content }} >> $GITHUB_STEP_SUMMARY"